{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appGatewayName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of application gateway"
            }
        },
        "appGatewaySize": {
            "type": "string",
            "allowedValues": [
                "WAF_Medium",
                "WAF_Large",
                "Standard_v2",
                "WAF_v2"
            ],
            "defaultValue": "WAF_v2",
            "metadata": {
                "description": "Specifies the application gateway SKU name."
            }
        },
        "appGatewayTier": {
            "type": "string",
            "allowedValues": [
                "Standard",
                "WAF",
                "Standard_v2",
                "WAF_v2"
            ],
            "defaultValue": "WAF_v2",
            "metadata": {
                "description": "Specifies the tier of the application gateway."
            }
        },
        "appGatewayCapacity": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "Specifies the number of the application gateway instances."
            }
        },
        "appGatewayBackendAddressPoolName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the backend address pool."
            }
        },
        "wafEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "WAF Enabled"
            }
        },
        "wafMode": {
            "type": "string",
            "allowedValues": [
                "Detection",
                "Prevention"
            ],
            "defaultValue": "Detection",
            "metadata": {
                "description": "Specifies prevention mode to block intrusions and attacks that the firewall rules detect."
            }
        },
        "wafRuleSetType": {
            "type": "string",
            "allowedValues": [
                "OWASP"
            ],
            "defaultValue": "OWASP",
            "metadata": {
                "description": "Specifies the type of the web application firewall rule set."
            }
        },
        "wafRuleSetVersion": {
            "type": "string",
            "allowedValues": [
                "2.2.9",
                "3.0"
            ],
            "defaultValue": "3.0",
            "metadata": {
                "description": "Specifies the version of the rule set type."
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the resource group containing the virtual network."
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "The name of the new or existing virtual network."
            }
        },
        "appGatewaySubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the subnet containing the Application Gateway."
            }
        },
        "appGatewaySubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "The address range of the subnet in the virtual network."
            }
        },        
        "publicIPDnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "The DNS prefix of the public IP to associate with the front end of the Application Gateway"
            }
        },
        "publicIpAddressSku": {
            "type": "string",
            "metadata": {
                "description": "Specifies the SKU of the public IP."
            },
            "allowedValues": [
                "Standard",
                "Basic"
            ],
            "defaultValue": "Standard"
        },
        "pubicIpAddressAllocationMethod": {
            "type": "string",
            "metadata": {
                "description": "Specifies the allocation method for the IP address."
            },
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "defaultValue": "Static"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on."
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation."
            },
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "publicIPAddressName": "[concat(parameters('appGatewayName'), '-pip')]",
        "publicIPAddressRef": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIPAddressName'))]",
        "appGatewaySubnetRef": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('appGatewaySubnetName'))]",
        "appGatewayId": "[resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "pip",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('ip/public.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "addressName": {
                        "value": "[variables('publicIPAddressName')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('publicIPDnsPrefix')]"
                    },
                    "allocationMethod": {
                        "value": "[parameters('pubicIpAddressAllocationMethod')]"
                    },
                    "sku": {
                        "value": "[parameters('publicIpAddressSku')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "vnet",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('vnet-template/snet.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('appGatewaySubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('appGatewaySubnetAddressPrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "[parameters('appGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "vnet",
                "pip"
            ],
            "properties": {
                "sku": {
                    "name": "[parameters('appGatewaySize')]",
                    "tier": "[parameters('appGatewayTier')]",
                    "capacity": "[parameters('appGatewayCapacity')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('appGatewaySubnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('publicIPAddressRef')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "appGatewayFrontendPort",
                        "properties": {
                            "Port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('appGatewayBackendAddressPoolName')]",
                        "properties": {
                            "backendAddresses": []
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGatewayBackendHttpSettings",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "appGatewayHttpListener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('appGatewayId'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('appGatewayId'), '/frontendPorts/appGatewayFrontendPort')]"
                            },
                            "protocol": "Http",
                            "sslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "httpRule1",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('appGatewayId'), '/httpListeners/appGatewayHttpListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('appGatewayId'), '/backendAddressPools/appGatewayBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('appGatewayId'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                            }
                        }
                    }
                ],
                "webApplicationFirewallConfiguration": {
                    "enabled": "[parameters('wafEnabled')]",
                    "firewallMode": "[parameters('wafMode')]",
                    "ruleSetType": "[parameters('wafRuleSetType')]",
                    "ruleSetVersion": "[parameters('wafRuleSetVersion')]"
                }
            }
        }
    ]
}